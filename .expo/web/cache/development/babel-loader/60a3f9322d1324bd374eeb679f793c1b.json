{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nvar config = {\n  baseURL: 'https://69a2d1e3ce3f.ngrok.io/api/'\n};\nvar client = axios.create(config);\nclient.interceptors.request.use(function (config) {\n  var token = JSON.parse(sessionStorage.getItem('data'));\n  var auth = token ? \"Bearer \" + token : '';\n  return _objectSpread(_objectSpread({}, config), {}, {\n    defaults: {\n      headers: _objectSpread(_objectSpread({}, config.headers), {}, {\n        \"Authorization\": auth\n      })\n    }\n  });\n});\nexport default client;","map":{"version":3,"sources":["/Users/alecreser/Desktop/Projects/NearBye/services/baseService.ts"],"names":["axios","config","baseURL","client","create","interceptors","request","use","token","JSON","parse","sessionStorage","getItem","auth","defaults","headers"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AAEA,IAAMC,MAA0B,GAAG;AAC/BC,EAAAA,OAAO,EAAE;AADsB,CAAnC;AAGA,IAAMC,MAAqB,GAAGH,KAAK,CAACI,MAAN,CAAaH,MAAb,CAA9B;AACAE,MAAM,CAACE,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CAAgC,UAACN,MAAD,EAAY;AACxC,MAAMO,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAd;AACA,MAAMC,IAAI,GAAGL,KAAK,eAAaA,KAAb,GAAuB,EAAzC;AACA,yCACOP,MADP;AAEIa,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,kCACAd,MAAM,CAACc,OADP;AAEH,yBAAiBF;AAFd;AADD;AAFd;AASH,CAZD;AAcA,eAAeV,MAAf","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\n\nconst config: AxiosRequestConfig = {\n    baseURL: 'https://69a2d1e3ce3f.ngrok.io/api/',\n};\nconst client: AxiosInstance = axios.create(config);\nclient.interceptors.request.use((config) => {\n    const token = JSON.parse(sessionStorage.getItem('data')!);\n    const auth = token ? `Bearer ${token}` : '';\n    return {\n        ...config,\n        defaults: {\n            headers: {\n                ...config.headers,\n                \"Authorization\": auth\n            },\n        }\n    };\n});\n\nexport default client;"]},"metadata":{},"sourceType":"module"}