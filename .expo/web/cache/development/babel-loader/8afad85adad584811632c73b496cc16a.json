{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Text, View } from \"../components/Themed\";\nimport authService from \"../services/authService\";\nimport { OTP } from \"../components/OTP\";\nimport { useState } from 'react';\nimport { handleResponse } from \"../helpers/httpResponseHelper\";\nimport { Button } from \"../components/Button\";\nimport Colors from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MagicCodeVerifyScreen(props) {\n  var phoneNumber = props.route.params.phoneNumber;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width;\n\n  var verifyMagicCode = function verifyMagicCode(code) {\n    var response;\n    return _regeneratorRuntime.async(function verifyMagicCode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(handleResponse(authService.verifyMagicCode(phoneNumber, code)));\n\n          case 4:\n            response = _context.sent;\n\n            if (response.success) {} else if (response.error) {\n              setError(response.error);\n            }\n\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleBackPress = function handleBackPress() {};\n\n  return _jsx(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentInsetAdjustmentBehavior: \"automatic\",\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    children: _jsx(LinearGradient, {\n      colors: [Colors.nearByeBlue, Colors.nearByePurple],\n      start: {\n        x: 1,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 1\n      },\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.body,\n        children: _jsxs(View, {\n          style: [styles.panel, {\n            width: width * 0.8\n          }],\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"NearBye\"\n          }), _jsxs(View, {\n            style: {\n              backgroundColor: 'transparent',\n              flexDirection: 'row',\n              marginBottom: 15,\n              justifyContent: 'center'\n            },\n            children: [_jsx(Text, {\n              style: styles.verifyCode,\n              children: \"Verify your code\"\n            }), loading && !error && _jsx(ActivityIndicator, {\n              size: \"small\",\n              color: Colors.nearByeBlue,\n              style: {\n                marginStart: 10\n              }\n            })]\n          }), _jsx(OTP, {\n            pinCount: 5,\n            triggerAction: function triggerAction(code) {\n              return verifyMagicCode(code);\n            }\n          }), error && _jsx(ErrorBubble, {\n            message: error\n          }), _jsx(Button, {\n            style: {\n              marginTop: 40\n            },\n            value: \"Back\",\n            onPress: handleBackPress\n          })]\n        })\n      })\n    })\n  });\n}\n\nvar ErrorBubble = function ErrorBubble(props) {\n  var message = props.message;\n  return _jsx(View, {\n    style: styles.errorBubble,\n    children: _jsx(Text, {\n      style: styles.errorText,\n      children: message\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: '100%',\n    padding: 20\n  },\n  title: {\n    fontSize: 30,\n    color: Colors.nearByeBlue,\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: '600'\n  },\n  body: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  panel: {\n    maxWidth: 500,\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  verifyCode: {\n    fontSize: 20,\n    color: Colors.nearByeBlue,\n    textAlign: 'center'\n  },\n  errorBubble: {\n    padding: 10,\n    borderRadius: 5,\n    backgroundColor: Colors.nearByeRed,\n    marginTop: 15,\n    maxWidth: 287,\n    width: '100%'\n  },\n  errorText: {\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/alecreser/Desktop/Projects/NearBye/screens/MagicCodeVerifyScreen.tsx"],"names":["LinearGradient","Text","View","authService","OTP","useState","handleResponse","Button","Colors","MagicCodeVerifyScreen","props","phoneNumber","route","params","loading","setLoading","error","setError","Dimensions","get","width","verifyMagicCode","code","response","success","handleBackPress","flexGrow","nearByeBlue","nearByePurple","x","y","styles","container","body","panel","title","backgroundColor","flexDirection","marginBottom","justifyContent","verifyCode","marginStart","marginTop","ErrorBubble","message","errorBubble","errorText","StyleSheet","create","flex","alignItems","height","padding","fontSize","color","textAlign","fontWeight","maxWidth","borderRadius","nearByeRed"],"mappings":"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","sourcesContent":["import { ActivityIndicator, Dimensions, ScrollView, StyleSheet } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport { Text, View } from '../components/Themed';\nimport authService from '../services/authService';\nimport { OTP } from '../components/OTP';\nimport { useState } from 'react';\nimport { handleResponse } from '../helpers/httpResponseHelper';\nimport { Button } from '../components/Button';\nimport Colors from '../constants/Colors';\n\nexport default function MagicCodeVerifyScreen(props: { route: { params: {phoneNumber: string} } }) {\n\tconst { phoneNumber } = props.route.params;\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState<string | null>(null);\n\tconst {width} = Dimensions.get('window');\n\tconst verifyMagicCode = async (code: string) => {\n\t\tsetError(null);\n\t\tsetLoading(true);\n\t\tconst response = await handleResponse(authService.verifyMagicCode(phoneNumber, code));\n\t\tif (response.success) {\n\t\t\t\n\t\t} else if (response.error) {\n\t\t\tsetError(response.error)\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tconst handleBackPress = () => {\n\n\t}\n\n\treturn (\n\t\t<ScrollView\n\t\t\tkeyboardShouldPersistTaps='handled'\n\t\t\tcontentInsetAdjustmentBehavior=\"automatic\"\n\t\t\tcontentContainerStyle={{ flexGrow: 1 }}\n\t\t>\n\t\t\t<LinearGradient colors={[Colors.nearByeBlue, Colors.nearByePurple]} start={{ x: 1, y: 0 }} end={{ x: 0, y: 1 }} style={styles.container}>\n\t\t\t\t<View style={styles.body}>\n\t\t\t\t\t<View style={[styles.panel, {width: width * 0.8}]}>\n\t\t\t\t\t\t<Text style={styles.title}>NearBye</Text>\n\t\t\t\t\t\t<View style={{backgroundColor: 'transparent', flexDirection: 'row', marginBottom: 15, justifyContent: 'center'}}>\n\t\t\t\t\t\t\t<Text style={styles.verifyCode}>Verify your code</Text>\n\t\t\t\t\t\t\t{loading && !error && <ActivityIndicator size=\"small\" color={Colors.nearByeBlue} style={{marginStart: 10}} />}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t<OTP pinCount={5} triggerAction={(code) => verifyMagicCode(code)} />\n\t\t\t\t\t\t{error && <ErrorBubble message={error} />}\n\t\t\t\t\t\t<Button style={{ marginTop: 40 }} value='Back' onPress={handleBackPress} />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</LinearGradient>\n\t\t</ScrollView>\n\t);\n}\n\ntype ErrorBubbleProps = {\n\tmessage: string;\n}\n\nconst ErrorBubble = (props: ErrorBubbleProps) => {\n\tconst {message} = props;\n\treturn (\n\t\t<View style={styles.errorBubble}>\n\t\t\t<Text style={styles.errorText}>{message}</Text>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\theight: '100%',\n\t\tpadding: 20\n\t},\n\ttitle: {\n\t\tfontSize: 30,\n\t\tcolor: Colors.nearByeBlue,\n\t\ttextAlign: 'center',\n\t\tmarginBottom: 20,\n\t\tfontWeight: '600'\n\t},\n\tbody: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'transparent',\n\t\tjustifyContent: 'center',\n\t},\n\tpanel: {\n\t\tmaxWidth: 500,\n\t\tpadding: 20,\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: 10,\n\t\talignItems: 'center'\n\t},\n\tverifyCode: {\n\t\tfontSize: 20,\n\t\tcolor: Colors.nearByeBlue,\n\t\ttextAlign: 'center'\n\t},\n\terrorBubble: {\n\t\tpadding: 10,\n\t\tborderRadius: 5,\n\t\tbackgroundColor: Colors.nearByeRed,\n\t\tmarginTop: 15,\n\t\tmaxWidth: 287,\n\t\twidth: '100%'\n\t},\n\terrorText: {\n\t\ttextAlign: 'center'\n\t}\n});"]},"metadata":{},"sourceType":"module"}