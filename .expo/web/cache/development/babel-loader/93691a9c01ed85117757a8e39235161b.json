{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Text, View } from \"../components/Themed\";\nimport { Input } from \"../components/Input\";\nimport { useState } from 'react';\nimport { Button } from \"../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MessagesScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneNumber = _useState2[0],\n      setPhoneNumber = _useState2[1];\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    children: _jsx(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      children: _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsxs(LinearGradient, {\n          colors: ['#0086A4', '#005C71'],\n          start: {\n            x: 1,\n            y: 0\n          },\n          end: {\n            x: 0,\n            y: 1\n          },\n          style: styles.container,\n          children: [_jsxs(View, {\n            style: styles.spacer,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: \"NearBye\"\n            }), _jsx(Text, {\n              style: styles.titleBody,\n              children: \"An anonymous proximity-based social platform\"\n            })]\n          }), _jsxs(View, {\n            style: styles.center,\n            children: [_jsx(Input, {\n              selectTextOnFocus: true,\n              keyboardType: \"phone-pad\",\n              placeholder: \"Phone number\",\n              value: phoneNumber,\n              onChangeText: setPhoneNumber,\n              maxLength: 14\n            }), _jsx(Button, {\n              style: {\n                marginTop: 40\n              },\n              value: \"Continue\",\n              onPress: function onPress() {}\n            })]\n          }), _jsx(View, {\n            style: styles.spacer\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: '100%'\n  },\n  title: {\n    color: 'white',\n    fontSize: 45,\n    fontWeight: 'bold',\n    letterSpacing: 8,\n    marginTop: 80,\n    fontFamily: 'Roboto'\n  },\n  titleBody: {\n    color: 'white',\n    fontSize: 16,\n    marginTop: 30,\n    fontFamily: 'Roboto',\n    width: 300,\n    textAlign: 'center',\n    flex: 1\n  },\n  spacer: {\n    minHeight: 300,\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  center: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/alecreser/Desktop/Projects/NearBye/screens/LoginScreen.tsx"],"names":["LinearGradient","Text","View","Input","useState","Button","MessagesScreen","phoneNumber","setPhoneNumber","Platform","OS","styles","container","Keyboard","dismiss","flex","x","y","spacer","title","titleBody","center","marginTop","StyleSheet","create","alignItems","height","color","fontSize","fontWeight","letterSpacing","fontFamily","width","textAlign","minHeight","backgroundColor","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { Dimensions, Keyboard, KeyboardAvoidingView, Platform, StyleSheet, TouchableWithoutFeedback } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport { Text, View } from '../components/Themed';\nimport { Input } from '../components/Input';\nimport { useState } from 'react';\nimport { Button } from '../components/Button';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nexport default function MessagesScreen() {\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  return (\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n      >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <View style={{flex: 1}}>\n        <LinearGradient colors={['#0086A4', '#005C71']} start={{x: 1, y: 0}} end={{x: 0,  y: 1}} style={styles.container}>\n          <View style={styles.spacer}>\n            <Text style={styles.title}>NearBye</Text>\n            <Text style={styles.titleBody}>An anonymous proximity-based social platform</Text>\n          </View>\n          <View style={styles.center}>\n            <Input selectTextOnFocus keyboardType='phone-pad' placeholder='Phone number' value={phoneNumber} onChangeText={setPhoneNumber} maxLength={14} />\n            <Button style={{marginTop: 40}} value='Continue' onPress={() => {}} />\n          </View>\n          <View style={styles.spacer} />\n        </LinearGradient>\n        </View>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: '100%'\n  },\n  title: {\n    color: 'white',\n    fontSize: 45,\n    fontWeight: 'bold',\n    letterSpacing: 8,\n    marginTop: 80,\n    fontFamily: 'Roboto'\n  },\n  titleBody: {\n    color: 'white',\n    fontSize: 16,\n    marginTop: 30,\n    fontFamily: 'Roboto',\n    width: 300,\n    textAlign: 'center',\n    flex: 1\n  },\n  spacer: {\n    minHeight: 300,\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  center: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});"]},"metadata":{},"sourceType":"module"}