{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"./Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Button = function Button(props) {\n  var style = props.style,\n      value = props.value,\n      buttonType = props.buttonType,\n      buttonColor = props.buttonColor,\n      children = props.children,\n      onPress = props.onPress;\n  var buttonStyle = styles.button;\n\n  if (buttonType === 'border') {\n    buttonStyle = _extends({\n      borderColor: '#53C08C',\n      borderWidth: 2\n    }, buttonStyle);\n  }\n\n  return _jsxs(TouchableOpacity, {\n    style: [style, buttonStyle],\n    onPress: onPress,\n    children: [value && _jsx(Text, {\n      style: styles.buttonText,\n      children: value\n    }), !value && children && {\n      children: children\n    }]\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    height: 50,\n    borderRadius: 10,\n    width: 270,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: '#53C08C',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/alecreser/Desktop/Projects/NearBye/components/Button.tsx"],"names":["Text","Button","props","style","value","buttonType","buttonColor","children","onPress","buttonStyle","styles","button","borderColor","borderWidth","buttonText","StyleSheet","create","height","borderRadius","width","paddingHorizontal","alignItems","justifyContent","color","fontWeight"],"mappings":";;;AAEA,SAASA,IAAT;;;AASA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,CAACC,KAAD,EAAW;AACtD,MAAOC,KAAP,GAAmED,KAAnE,CAAOC,KAAP;AAAA,MAAcC,KAAd,GAAmEF,KAAnE,CAAcE,KAAd;AAAA,MAAqBC,UAArB,GAAmEH,KAAnE,CAAqBG,UAArB;AAAA,MAAiCC,WAAjC,GAAmEJ,KAAnE,CAAiCI,WAAjC;AAAA,MAA8CC,QAA9C,GAAmEL,KAAnE,CAA8CK,QAA9C;AAAA,MAAwDC,OAAxD,GAAmEN,KAAnE,CAAwDM,OAAxD;AACA,MAAIC,WAAW,GAAGC,MAAM,CAACC,MAAzB;;AACA,MAAIN,UAAU,KAAK,QAAnB,EAA6B;AAC3BI,IAAAA,WAAW,GAAG,SAAc;AAACG,MAAAA,WAAW,EAAE,SAAd;AAAyBC,MAAAA,WAAW,EAAE;AAAtC,KAAd,EAAwDJ,WAAxD,CAAd;AACD;;AACD,SACE,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,CAACN,KAAD,EAAQM,WAAR,CAAzB;AAA+C,IAAA,OAAO,EAAED,OAAxD;AAAA,eACGJ,KAAK,IAAI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,MAAM,CAACI,UAApB;AAAA,gBAAiCV;AAAjC,MADZ,EAEG,CAACA,KAAD,IAAUG,QAAV,IAAsB;AAACA,MAAAA,QAAQ,EAARA;AAAD,KAFzB;AAAA,IADF;AAMD,CAZM;AAcP,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,KAAK,EAAE,GAHD;AAINC,IAAAA,iBAAiB,EAAE,EAJb;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMNC,IAAAA,cAAc,EAAE;AANV,GADuB;AAS/BR,EAAAA,UAAU,EAAE;AACVS,IAAAA,KAAK,EAAE,SADG;AAEVC,IAAAA,UAAU,EAAE;AAFF;AATmB,CAAlB,CAAf","sourcesContent":["\nimport { StyleProp, StyleSheet, TouchableOpacity, ViewStyle } from 'react-native';\nimport { Text, TextProps } from './Themed';\n\ntype ButtonProps = {\n  style:  StyleProp<ViewStyle>\n  value?: string;\n  buttonType: 'solid' | 'border'\n  buttonColor: 'green' | 'red'\n  onPress: () => void;\n}\nexport const Button: React.FC<ButtonProps> = (props) => {\n  const {style, value, buttonType, buttonColor, children, onPress} = props;\n  let buttonStyle = styles.button;\n  if (buttonType === 'border') {\n    buttonStyle = Object.assign({borderColor: '#53C08C', borderWidth: 2}, buttonStyle);\n  }\n  return (\n    <TouchableOpacity style={[style, buttonStyle]} onPress={onPress}>\n      {value && <Text style={styles.buttonText}>{value}</Text>}\n      {!value && children && {children}}\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 50,\n    borderRadius: 10,\n    width: 270,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: '#53C08C',\n    fontWeight: 'bold'\n  }\n});"]},"metadata":{},"sourceType":"module"}