{"ast":null,"code":"import ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Text, View } from \"../components/Themed\";\nimport { OTP } from \"../components/OTP\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MagicCodeVerifyScreen(props) {\n  return _jsx(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentInsetAdjustmentBehavior: \"automatic\",\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    children: _jsx(LinearGradient, {\n      colors: ['#0086A4', '#240071'],\n      start: {\n        x: 1,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 1\n      },\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.body,\n        children: _jsxs(View, {\n          style: styles.panel,\n          children: [_jsx(Text, {\n            children: \"Verify\"\n          }), _jsx(OTP, {\n            pinCount: 5\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    height: '100%',\n    padding: 20\n  },\n  title: {\n    color: 'white',\n    fontSize: 45,\n    fontWeight: 'bold',\n    letterSpacing: 8,\n    marginTop: 80,\n    fontFamily: 'Roboto'\n  },\n  titleBody: {\n    color: 'white',\n    fontSize: 16,\n    marginTop: 30,\n    fontFamily: 'Roboto',\n    width: 300,\n    textAlign: 'center',\n    flex: 1\n  },\n  spacer: {\n    minHeight: 300,\n    alignItems: 'center',\n    backgroundColor: 'transparent'\n  },\n  center: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  flexChild: {\n    flex: 1\n  },\n  body: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  },\n  panel: {\n    width: 340,\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["/Users/alecreser/Desktop/Projects/NearBye/screens/MagicCodeVerifyScreen.tsx"],"names":["LinearGradient","Text","View","OTP","MagicCodeVerifyScreen","props","flexGrow","x","y","styles","container","body","panel","StyleSheet","create","flex","alignItems","height","padding","title","color","fontSize","fontWeight","letterSpacing","marginTop","fontFamily","titleBody","width","textAlign","spacer","minHeight","backgroundColor","center","justifyContent","flexChild","borderRadius"],"mappings":";;AACA,SAASA,cAAT,QAA+B,sBAA/B;AAEA,SAASC,IAAT,EAAeC,IAAf;AAKA,SAASC,GAAT;;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAkE;AAUhF,SACC,KAAC,UAAD;AACC,IAAA,yBAAyB,EAAC,SAD3B;AAEC,IAAA,8BAA8B,EAAC,WAFhC;AAGC,IAAA,qBAAqB,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHxB;AAAA,cAKC,KAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAAxB;AAAgD,MAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAvD;AAAuE,MAAA,GAAG,EAAE;AAAED,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAA5E;AAA4F,MAAA,KAAK,EAAEC,MAAM,CAACC,SAA1G;AAAA,gBACC,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA,kBACC,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA,qBACC,KAAC,IAAD;AAAA;AAAA,YADD,EAEC,KAAC,GAAD;AAAK,YAAA,QAAQ,EAAE;AAAf,YAFD;AAAA;AADD;AADD;AALD,IADD;AAgBA;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAChCJ,EAAAA,SAAS,EAAE;AACVK,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,OAAO,EAAE;AAJC,GADqB;AAOhCC,EAAAA,KAAK,EAAE;AACNC,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,UAAU,EAAE,MAHN;AAINC,IAAAA,aAAa,EAAE,CAJT;AAKNC,IAAAA,SAAS,EAAE,EALL;AAMNC,IAAAA,UAAU,EAAE;AANN,GAPyB;AAehCC,EAAAA,SAAS,EAAE;AACVN,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVG,IAAAA,SAAS,EAAE,EAHD;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVE,IAAAA,KAAK,EAAE,GALG;AAMVC,IAAAA,SAAS,EAAE,QAND;AAOVb,IAAAA,IAAI,EAAE;AAPI,GAfqB;AAwBhCc,EAAAA,MAAM,EAAE;AACPC,IAAAA,SAAS,EAAE,GADJ;AAEPd,IAAAA,UAAU,EAAE,QAFL;AAGPe,IAAAA,eAAe,EAAE;AAHV,GAxBwB;AA6BhCC,EAAAA,MAAM,EAAE;AACPjB,IAAAA,IAAI,EAAE,CADC;AAEPgB,IAAAA,eAAe,EAAE,aAFV;AAGPE,IAAAA,cAAc,EAAE;AAHT,GA7BwB;AAkChCC,EAAAA,SAAS,EAAE;AACVnB,IAAAA,IAAI,EAAE;AADI,GAlCqB;AAqChCJ,EAAAA,IAAI,EAAE;AACLI,IAAAA,IAAI,EAAE,CADD;AAELgB,IAAAA,eAAe,EAAE,aAFZ;AAGLE,IAAAA,cAAc,EAAE;AAHX,GArC0B;AA0ChCrB,EAAAA,KAAK,EAAE;AACNe,IAAAA,KAAK,EAAE,GADD;AAENT,IAAAA,OAAO,EAAE,EAFH;AAGNa,IAAAA,eAAe,EAAE,OAHX;AAINI,IAAAA,YAAY,EAAE;AAJR;AA1CyB,CAAlB,CAAf","sourcesContent":["import { ScrollView, StyleSheet, TextInput } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\n\nimport { Text, View } from '../components/Themed';\nimport { Input } from '../components/Input';\nimport { useEffect, useState } from 'react';\nimport { Button } from '../components/Button';\nimport authService from '../services/authService';\nimport { OTP } from '../components/OTP';\n\nexport default function MagicCodeVerifyScreen(props: { route: { params: any } }) {\n\t// const verifyMagicCode = async () => {\n\t// \tconst response = await authService.verifyMagicCode(code);\n\t// \tconsole.log(response);\n\t// }\n\n\t// useEffect(() => {\n\t// \tverifyMagicCode();\n\t// }, []);\n\n\treturn (\n\t\t<ScrollView\n\t\t\tkeyboardShouldPersistTaps='handled'\n\t\t\tcontentInsetAdjustmentBehavior=\"automatic\"\n\t\t\tcontentContainerStyle={{ flexGrow: 1 }}\n\t\t>\n\t\t\t<LinearGradient colors={['#0086A4', '#240071']} start={{ x: 1, y: 0 }} end={{ x: 0, y: 1 }} style={styles.container}>\n\t\t\t\t<View style={styles.body}>\n\t\t\t\t\t<View style={styles.panel}>\n\t\t\t\t\t\t<Text>Verify</Text>\n\t\t\t\t\t\t<OTP pinCount={5} />\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</LinearGradient>\n\t\t</ScrollView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\talignItems: 'center',\n\t\theight: '100%',\n\t\tpadding: 20\n\t},\n\ttitle: {\n\t\tcolor: 'white',\n\t\tfontSize: 45,\n\t\tfontWeight: 'bold',\n\t\tletterSpacing: 8,\n\t\tmarginTop: 80,\n\t\tfontFamily: 'Roboto'\n\t},\n\ttitleBody: {\n\t\tcolor: 'white',\n\t\tfontSize: 16,\n\t\tmarginTop: 30,\n\t\tfontFamily: 'Roboto',\n\t\twidth: 300,\n\t\ttextAlign: 'center',\n\t\tflex: 1\n\t},\n\tspacer: {\n\t\tminHeight: 300,\n\t\talignItems: 'center',\n\t\tbackgroundColor: 'transparent'\n\t},\n\tcenter: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'transparent',\n\t\tjustifyContent: 'center'\n\t},\n\tflexChild: {\n\t\tflex: 1\n\t},\n\tbody: {\n\t\tflex: 1,\n\t\tbackgroundColor: 'transparent',\n\t\tjustifyContent: 'center'\n\t},\n\tpanel: {\n\t\twidth: 340,\n\t\tpadding: 20,\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: 10\n\t}\n});"]},"metadata":{},"sourceType":"module"}